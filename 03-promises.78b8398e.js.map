{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,UAChCC,EAAQF,SAASC,cAAc,yBAC/BE,EAAOH,SAASC,cAAc,wBAC9BG,EAASJ,SAASC,cAAc,0BAuBtC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,QADTH,EACiB,SAACI,EAASC,GAC3BC,YAAW,WACTF,EAAQ,CAAEN,WAAUS,MAAAR,G,GACnBA,E,EAIc,SAACK,EAASC,GAC3BC,YAAW,WACTD,EAAO,CAAEP,WAAUS,MAAAR,G,GAClBA,E,GAlCTR,EAAOiB,iBAAiB,SACtB,SAASC,GACPA,EAAEC,iBAKF,IAJA,IAAMC,EAAWC,SAASlB,EAAMmB,OAC1BC,EAAUF,SAASjB,EAAKkB,OACxBE,EAAYH,SAAShB,EAAOiB,OAC9BG,EAAeL,EACVM,EAAI,EAAGA,EAAIF,EAAWE,IAC7BpB,EAAcoB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUsB,EAAKD,EAALZ,MACjBc,QAAQC,IAAI,uBAA+CC,OAAnBzB,EAAW,EAAE,QAAYyB,OAANH,EAAM,O,IAElEI,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAU2B,EAAKN,EAALZ,MAClBc,QAAQC,IAAI,sBAA8CC,OAAnBzB,EAAW,EAAE,QAAYyB,OAANE,EAAM,O,IAEpET,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["const button = document.querySelector('button');\nconst delay = document.querySelector(\"input[name = 'delay']\");\nconst step = document.querySelector(\"input[name = 'step']\");\nconst amount = document.querySelector(\"input[name = 'amount']\");\n\nbutton.addEventListener('click', \n  function(e) { \n    e.preventDefault();\n    const delayVal = parseInt(delay.value);\n    const stepVal = parseInt(step.value);\n    const amountVal = parseInt(amount.value);\n    let currentDelay = delayVal;\n    for (let i = 0; i < amountVal; i++) {\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          console.log(`\\u2705 Fulfilled promise ${position + 1} in ${delay} ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`\\u274c Rejected promise ${position + 1} in ${delay} ms`);\n        });\n      currentDelay += stepVal;\n    }\n  }\n);\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    });\n  } else {\n    //console.log(`Reject promise #${position}`)\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    });\n  }\n}\n\n\n\n/*\n    event.preventDefault()\n\n    setTimeout( () => {\n        const amountValue = amount.value;\n\n        for (let i = 1; i <= amountValue; i = i + 1 ) {\n          const delay = delayStep.value * (i - 1);        \n          setTimeout( () => {\n            console.log(`Create Promise ${i} with ${parseInt(firstDelay.value) + delay}ms delay`);\n              createPromise(i, parseInt(firstDelay.value) + delay)\n            }\n            , delay\n          )\n        }\n    }\n    , firstDelay.value\n    )\n}\n    */\n  \n\n\n\n\n\n// const createPromise = (position, delay) => new Promise( (resolve, reject) => {\n  \n//   const shouldResolve = Math.random() > 0.3;\n//   //console.log(`Promise #${position} is ${shouldResolve}`);\n//   const returnedData = {\n//     position: position,\n//     delay: delay\n//   };\n\n//   if (shouldResolve) {\n//     resolve(returnedData)\n//   } else {\n//     reject(returnedData)\n//   }\n\n// })\n\n\n\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   console.log(`${(shouldResolve ? 'Fulfilled' : 'Rejected')} promise ${position} in ${delay}ms`)\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n"],"names":["$ce04d3a99e08e73b$var$button","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","e","preventDefault","delayVal","parseInt","value","stepVal","amountVal","currentDelay","i","then","param","delay1","console","log","concat","catch","delay2"],"version":3,"file":"03-promises.78b8398e.js.map"}